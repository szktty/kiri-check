import{_ as t,c as s,o as i,ae as o}from"./chunks/framework.XMIap9gs.js";const p=JSON.parse('{"title":"Configure tests","description":"","frontmatter":{},"headers":[],"relativePath":"properties/configure-tests.md","filePath":"properties/configure-tests.md"}'),a={name:"properties/configure-tests.md"};function r(n,e,d,c,l,h){return i(),s("div",null,e[0]||(e[0]=[o('<h1 id="configure-tests" tabindex="-1">Configure tests <a class="header-anchor" href="#configure-tests" aria-label="Permalink to &quot;Configure tests&quot;">​</a></h1><h2 id="customize-test-settings" tabindex="-1">Customize test settings <a class="header-anchor" href="#customize-test-settings" aria-label="Permalink to &quot;Customize test settings&quot;">​</a></h2><p>Test settings such as timeouts can be configured in the <code>property</code> function. Since <code>property</code> accepts the same arguments as <code>test</code>, the same configurations are possible.</p><p>Settings that affect globally can be modified through static properties of <code>KiriCheck</code>.</p><h2 id="customize-number-of-examples-and-attempts" tabindex="-1">Customize number of examples and attempts <a class="header-anchor" href="#customize-number-of-examples-and-attempts" aria-label="Permalink to &quot;Customize number of examples and attempts&quot;">​</a></h2><p>The maximum number of values passed to the test block can be specified using <code>KiriCheck.maxExamples</code> or <code>maxExamples</code> in <code>forAll</code>. The default is 100. If generated values are discarded using filters such as <code>filter</code>, you can repeat the generation up to the maximum number of attempts specified by <code>KiriCheck.maxTries</code> or <code>maxTries</code> in <code>forAll</code>.</p><h2 id="customize-number-of-shrinking-attempts" tabindex="-1">Customize number of shrinking attempts <a class="header-anchor" href="#customize-number-of-shrinking-attempts" aria-label="Permalink to &quot;Customize number of shrinking attempts&quot;">​</a></h2><p>The number of attempts for shrinking can be specified using <code>KiriCheck.maxShrinkingTries</code> or <code>maxShrinkingTries</code> in <code>forAll</code>. The default is 100.</p><p>If you want to disable or make shrinking unlimited, specify <code>ShrinkingPolicy</code> using <code>KiriCheck.shrinkingPolicy</code> or <code>shrinkingPolicy</code> in <code>forAll</code>. To disable, specify <code>ShrinkingPolicy.off</code>; to make it unlimited, specify <code>ShrinkingPolicy.full</code>.</p><h2 id="fix-random-seed" tabindex="-1">Fix random seed <a class="header-anchor" href="#fix-random-seed" aria-label="Permalink to &quot;Fix random seed {id=&quot;fix-random-seed&quot;}&quot;">​</a></h2><p>You can specify a random seed using <code>KiriCheck.seed</code> or <code>seed</code> in <code>forAll</code>. Fixing the random seed ensures that the same errors and shrinking results occur every time an error happens.</p><h2 id="skip-failed-tests" tabindex="-1">Skip failed tests <a class="header-anchor" href="#skip-failed-tests" aria-label="Permalink to &quot;Skip failed tests&quot;">​</a></h2><p>By setting <code>ignoreFalsify</code> to true in <code>forAll</code>, testing will continue even if a test fails.</p><h2 id="verbose" tabindex="-1">Show generated values and shrunk values verbosely <a class="header-anchor" href="#verbose" aria-label="Permalink to &quot;Show generated values and shrunk values verbosely {id=&quot;verbose&quot;}&quot;">​</a></h2><p>Setting <code>KiriCheck.verbosity</code> to <code>Verbosity.verbose</code> allows you to display the details of generated and shrunk values.</p><p>Example:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KiriCheck.verbosity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Verbosity.verbose;</span></span></code></pre></div>',17)]))}const m=t(a,[["render",r]]);export{p as __pageData,m as default};

import{_ as i,C as t,c as e,o as n,G as l,ae as h}from"./chunks/framework.XMIap9gs.js";const y=JSON.parse('{"title":"Behavior and commands","description":"","frontmatter":{},"headers":[],"relativePath":"stateful/commands.md","filePath":"stateful/commands.md"}'),p={name:"stateful/commands.md"};function k(d,s,r,o,c,E){const a=t("show-structure");return n(),e("div",null,[l(a,{for:"chapter,procedure",depth:"2"}),s[0]||(s[0]=h('<h1 id="behavior-and-commands" tabindex="-1">Behavior and commands <a class="header-anchor" href="#behavior-and-commands" aria-label="Permalink to &quot;Behavior and commands&quot;">​</a></h1><h2 id="run-stateful-tests" tabindex="-1">Run stateful tests <a class="header-anchor" href="#run-stateful-tests" aria-label="Permalink to &quot;Run stateful tests&quot;">​</a></h2><h3 id="stateful-test-run-behavior" tabindex="-1"><code>runBehavior</code> <a class="header-anchor" href="#stateful-test-run-behavior" aria-label="Permalink to &quot;`runBehavior` {id=&quot;stateful-test-run-behavior&quot;}&quot;">​</a></h3><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> runBehavior</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">State, System</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Behavior</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">State, System</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> behavior, {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  int?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> seed,</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  int?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> maxCycles,</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  int?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> maxSteps,</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  int?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> maxCommandTries,</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  int?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> maxShrinkingTries,</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  int?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> maxShrinkingCycles,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Timeout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cycleTimeout,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  FutureOr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> setUp,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  FutureOr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tearDown,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  FutureOr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Behavior</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">State, System</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, System)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> onDestroy,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  FutureOr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(StatefulFalsifyingExample</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">State, System</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> onFalsify,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ignoreFalsify,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="behavior" tabindex="-1">Behavior <a class="header-anchor" href="#behavior" aria-label="Permalink to &quot;Behavior&quot;">​</a></h2><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Behavior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">State</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>Describes behavior of a stateful test.</p><h3 id="abstract-initializestate" tabindex="-1">abstract <code>initializeState</code> <a class="header-anchor" href="#abstract-initializestate" aria-label="Permalink to &quot;abstract `initializeState`&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">factory</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">State </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">initialState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Creates a new state.</p><h3 id="abstract-initialprecondition" tabindex="-1">abstract <code>initialPrecondition</code> <a class="header-anchor" href="#abstract-initialprecondition" aria-label="Permalink to &quot;abstract `initialPrecondition`&quot;">​</a></h3><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bool </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">initialPrecondition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(State state)</span></span></code></pre></div><p>Returns true if the given state satisfies the initial precondition.</p><h3 id="abstract-createsystem" tabindex="-1">abstract <code>createSystem</code> <a class="header-anchor" href="#abstract-createsystem" aria-label="Permalink to &quot;abstract `createSystem`&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">factory</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">System </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(State state)</span></span></code></pre></div><p>Creates a new system with the given state.</p><h3 id="abstract-destroysystem" tabindex="-1">abstract <code>destroySystem</code> <a class="header-anchor" href="#abstract-destroysystem" aria-label="Permalink to &quot;abstract `destroySystem`&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> destroySystem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(System system)</span></span></code></pre></div><p>Destroy the given system.</p><h3 id="abstract-generatecommands" tabindex="-1">abstract <code>generateCommands</code> <a class="header-anchor" href="#abstract-generatecommands" aria-label="Permalink to &quot;abstract `generateCommands`&quot;">​</a></h3><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Command</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">State, System</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generateCommands</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(State state)</span></span></code></pre></div><p>Generates a list of commands to run on the given state.</p><h3 id="optional-setup" tabindex="-1">optional <code>setUp</code> <a class="header-anchor" href="#optional-setup" aria-label="Permalink to &quot;optional `setUp`&quot;">​</a></h3><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setUp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Called before the cycle is run. Default implementation does nothing.</p><h3 id="optional-setupall" tabindex="-1">optional <code>setUpAll</code> <a class="header-anchor" href="#optional-setupall" aria-label="Permalink to &quot;optional `setUpAll`&quot;">​</a></h3><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setUpAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Called once before all cycles are run. Default implementation does nothing.</p><h3 id="optional-teardown" tabindex="-1">optional <code>tearDown</code> <a class="header-anchor" href="#optional-teardown" aria-label="Permalink to &quot;optional `tearDown`&quot;">​</a></h3><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tearDown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Called after the cycle is run. Default implementation does nothing.</p><h3 id="optional-teardownall" tabindex="-1">optional <code>tearDownAll</code> <a class="header-anchor" href="#optional-teardownall" aria-label="Permalink to &quot;optional `tearDownAll`&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tearDownAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Called once after all cycles are run. Default implementation does nothing.</p><h2 id="generate-values-and-perform-actions" tabindex="-1">Generate values and perform actions <a class="header-anchor" href="#generate-values-and-perform-actions" aria-label="Permalink to &quot;Generate values and perform actions&quot;">​</a></h2><h3 id="stateful-test-command-action" tabindex="-1"><code>Action</code> <a class="header-anchor" href="#stateful-test-command-action" aria-label="Permalink to &quot;`Action` {id=&quot;stateful-test-command-action&quot;}&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Action</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">State, System, T, R</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  String description,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Arbitrary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arbitrary, {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  required </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> nextState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(State, T),</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  required R </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(System, T),</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bool </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(State, T)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> precondition,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bool </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(State, T, R)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> postcondition,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>A command that performs actions with generated values.</p><p>Depending on the number of arbitraries, there are <code>Action0</code> through <code>Action8</code>. <code>Action1</code> is type alias of <code>Action</code>.</p><h2 id="initialize-and-finalize" tabindex="-1">Initialize and finalize <a class="header-anchor" href="#initialize-and-finalize" aria-label="Permalink to &quot;Initialize and finalize&quot;">​</a></h2><h3 id="stateful-test-command-initialize" tabindex="-1"><code>Initialize</code> <a class="header-anchor" href="#stateful-test-command-initialize" aria-label="Permalink to &quot;`Initialize` {id=&quot;stateful-test-command-initialize&quot;}&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Initialize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">State, System</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Command</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">State, System</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cmd)</span></span></code></pre></div><p>A command that initializes the state and system with another command.</p><p>The command enclosed with <code>Initialize</code> are always executed first and are not called in subsequent steps. If there are multiple <code>Initialize</code> commands, they are executed in the order they were defined.</p><h3 id="stateful-test-command-finalize" tabindex="-1"><code>Finalize</code> <a class="header-anchor" href="#stateful-test-command-finalize" aria-label="Permalink to &quot;`Finalize` {id=&quot;stateful-test-command-finalize&quot;}&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Finalize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">State, System</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Command</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">State, System</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> command)</span></span></code></pre></div><p>A command that finalizes the state and system with another command.</p><p>The command enclosed with <code>Finalize</code> is always executed last and is not called in previous steps. The <code>Finalize</code> command is not executed in any step other than the last one.</p>',48))])}const u=i(p,[["render",k]]);export{y as __pageData,u as default};
